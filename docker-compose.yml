version: '3'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka-net
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    volumes:
      - ./data/kafka:/var/lib/kafka/data
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    networks:
      - kafka-net
  mongo:
    image: mongo
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - ./data/mongo:/data/db
    networks:
      - kafka-net
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_DB=postgres
    networks:
      - kafka-net
  app1:
    build:
      context: ./app1
      dockerfile: Dockerfile
    container_name: app1
    ports:
      - "8080:8080"
    depends_on:
      - kafka
      - postgres
    volumes:
      - ./app1:/app1
    environment:
      - PORT=8080
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/postgres
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_TOPIC=topic1
    networks:
      - kafka-net
  app2:
    build:
      context: ./app2
      dockerfile: Dockerfile
    container_name: app2
    ports:
      - "8081:8081"
    volumes:
      - ./app2:/app2
    depends_on:
      - kafka
      - mongo
    networks:
      - kafka-net
    environment:
      - PORT=8081
      - MONGO_URL=mongodb://mongo:27017/app2
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_TOPIC=topic2
   
networks:
  kafka-net:
    driver: bridge
